model Analysis {
  id               String             @id @unique @default(uuid()) @db.VarChar(36)
  code             Int                @unique @default(autoincrement())
  type             String             @db.VarChar(50)
  description      String?            @db.VarChar(200)
  requestId        String?            @map("wf_request_id") @db.VarChar(36)
  materialId       String?            @map("material_id") @db.VarChar(36)
  sortOrder        Int                @default(0) @map("sort_order")
  status           Status             @default(active)
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @default(now()) @updatedAt @map("updated_at")
  createdById      String?            @map("created_by_id") @db.VarChar(36)
  isActive         Boolean            @default(true) @map("is_active")
  updatedById      String?            @map("updated_by_id") @db.VarChar(36)
  AnalysisLab      LabAnalysisTypes[]
  materialAnalysis MaterialAnalysis[]

  @@index([type])
  @@index([materialId])
  @@index([materialId, type])
  @@map("analysis")
}

model Problem {
  id              String            @id @unique @default(uuid()) @db.VarChar(36)
  code            Int               @unique @default(autoincrement())
  name            String?           @db.VarChar(50)
  description     String?           @db.VarChar(200)
  departmentId    String            @map("department_id") @db.VarChar(36)
  problemName     String            @map("problem") @db.VarChar(36)
  sortOrder       Int               @default(0) @map("sort_order")
  status          Status            @default(active)
  createdAt       DateTime          @default(now()) @map("created_at")
  updatedAt       DateTime          @default(now()) @updatedAt @map("updated_at")
  updatedById     String?           @map("updated_by_id") @db.VarChar(36)
  createdById     String?           @map("created_by_id") @db.VarChar(36)
  isActive        Boolean           @default(true) @map("is_active")
  ProblemCode     ProblemCode[]
  StoppageProblem StoppageProblem[]

  @@index([departmentId])
  @@index([code])
  @@map("problem")
}

model ProblemCode {
  id            String   @id @unique @default(uuid()) @db.VarChar(36)
  code          Int      @unique @default(autoincrement())
  problemId     String?  @map("problem_id") @db.VarChar(36)
  equipmentId   String?  @map("equipment_id") @db.VarChar(36)
  departmentId  String?  @map("department_id") @db.VarChar(36)
  status        Status   @default(active)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  createdById   String?  @map("created_by_id") @db.VarChar(36)
  updatedById   String?  @map("updated_by_id") @db.VarChar(36)
  isActive      Boolean  @default(true) @map("is_active")
  problemcode   Int      @map("problem_code")
  ProblemMaster Problem? @relation(fields: [problemId], references: [id])

  @@index([code])
  @@index([problemId])
  @@index([departmentId])
  @@index([code, problemId, departmentId])
  @@map("problem_code")
}

model TransactionType {
  id          String   @id @unique @default(uuid()) @db.VarChar(36)
  code        Int      @unique @default(autoincrement())
  name        String   @db.VarChar(50)
  status      Status   @default(active)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  @@index([code])
  @@map("transaction_type")
}

model ProductionCategory {
  id          String   @id @unique @default(uuid()) @db.VarChar(36)
  code        Int      @unique @default(autoincrement())
  name        String   @db.VarChar(50)
  // productCatagoryCode String   @map("product_category_code")
  status      Status   @default(active)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  @@index([code])
  // @@index([productCatagoryCode])
  @@map("production_category")
}

model MaterialType {
  id                   String             @id @unique @default(uuid()) @db.VarChar(36)
  code                 Int                @unique @default(autoincrement())
  materialId           String             @map("material_id") @db.VarChar(36)
  materialTypeMasterId String             @map("material_type_id") @db.VarChar(36)
  status               Status             @default(active)
  createdAt            DateTime           @default(now()) @map("created_at")
  updatedAt            DateTime           @default(now()) @updatedAt @map("updated_at")
  createdById          String?            @map("created_by_id") @db.VarChar(36)
  updatedById          String?            @map("updated_by_id") @db.VarChar(36)
  isActive             Boolean            @default(true) @map("is_active")
  materialTypeMaster   MaterialTypeMaster @relation(fields: [materialTypeMasterId], references: [id])

  @@index([code])
  @@index([materialTypeMasterId], map: "material_type_material_type_id_fkey")
  @@map("material_type")
}

model MaterialTypeMaster {
  id               String         @id @unique @default(uuid()) @db.VarChar(36)
  code             Int            @unique @default(autoincrement())
  name             String         @db.VarChar(50)
  materialTypeCode String         @map("material_type_code")
  status           Status         @default(active)
  createdAt        DateTime       @default(now()) @map("created_at")
  updatedAt        DateTime       @default(now()) @updatedAt @map("updated_at")
  createdById      String?        @map("created_by_id") @db.VarChar(36)
  updatedById      String?        @map("updated_by_id") @db.VarChar(36)
  isActive         Boolean        @default(true) @map("is_active")
  materialTypes    MaterialType[]

  @@index([code])
  @@map("material_type_master")
}

model MaterialAnalysis {
  id               String   @id @unique @default(uuid()) @db.VarChar(36)
  code             Int      @unique @default(autoincrement())
  materialId       String   @map("material_id") @db.VarChar(50)
  analysisId       String   @map("analysis_id") @db.VarChar(50)
  status           Status   @default(active)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @default(now()) @updatedAt @map("updated_at")
  createdById      String?  @map("created_by_id") @db.VarChar(36)
  updatedById      String?  @map("updated_by_id") @db.VarChar(36)
  isActive         Boolean  @default(true) @map("is_active")
  MaterialAnalysis Analysis @relation(fields: [analysisId], references: [id])

  @@index([code])
  @@index([analysisId], map: "material_analysis_analysis_id_fkey")
  @@map("material_analysis")
}

model EquipmentOutputMaterialMapping {
  id          String   @id @unique @default(uuid()) @db.VarChar(36)
  code        Int      @unique @default(autoincrement())
  equipmentId String   @map("equipment_id") @db.VarChar(36)
  materialId  String   @map("material_id") @db.VarChar(36)
  status      Status   @default(active)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @updatedAt @map("updated_at")
  createdById String?  @map("created_by_id") @db.VarChar(36)
  updatedById String?  @map("updated_by_id") @db.VarChar(36)
  isActive    Boolean  @default(true) @map("is_active")

  @@index([code])
  @@index([equipmentId])
  @@index([materialId])
  @@map("equipment_output_material_mapping")
}

model AnnualMaterialBudget {
  id            String   @id @unique @default(uuid()) @db.VarChar(36)
  code          Int      @unique @default(autoincrement())
  financialYear String   @map("financial_year") @db.VarChar(9)
  month         Int
  year          Int
  materialId    String   @map("material_id") @db.VarChar(36)
  value         Decimal  @map("value") @db.Decimal(10, 2)
  status        Status   @default(active)
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  createdById   String?  @map("created_by_id") @db.VarChar(36)
  updatedById   String?  @map("updated_by_id") @db.VarChar(36)
  isActive      Boolean  @default(true) @map("is_active")

  @@index([financialYear])
  @@index([materialId])
  @@index([code])
  @@map("annual_material_budget")
}

model Bags {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  transactionDate DateTime @map("transaction_date") @db.Date
  materialId      String   @map("material_id") @db.VarChar(36)
  opc             Int      @map("opc_bags")
  ppc             Int      @map("ppc_bags")
  src             Int      @map("src_bags")
  burstopc        Int      @map("burst_opc_bags")
  burstppc        Int      @map("burst_ppc_bags")
  burstsrc        Int      @map("burst_src_bags")
  export          Int      @map("export_bags")
  deport          Int      @map("deport_bags")
  transferQty     Int      @map("transfer_to_other_plants")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")

  @@index([materialId])
  @@index([code])
  @@map("bags")
}

model Stoppage {
  id                  String            @id @unique @default(uuid()) @db.VarChar(36)
  code                Int               @unique @default(autoincrement())
  transactionDate     DateTime          @map("transaction_date") @db.Date
  departmentId        String            @map("department_id") @db.VarChar(36)
  // equipmentId            String            @map("equipment_id") @db.VarChar(36)
  equipmentMainId     String            @map("equipment_main_id") @db.VarChar(36)
  equipmentSubGroupId String            @map("equipment_sub_group_id") @db.VarChar(36)
  // equipmentSubSubGroupId String            @map("equipment_sub_Sub_group_id") @db.VarChar(36)
  runningHours        String?           @map("running_hours") @db.VarChar(5)
  stoppageHours       String?           @map("stoppage_hours") @db.VarChar(5)
  totalHours          String?           @map("total_hours") @db.VarChar(5)
  createdAt           DateTime          @default(now()) @map("created_at")
  updatedAt           DateTime          @default(now()) @updatedAt @map("updated_at")
  createdById         String?           @map("created_by_id") @db.VarChar(36)
  updatedById         String?           @map("updated_by_id") @db.VarChar(36)
  isActive            Boolean           @default(true) @map("is_active")
  stoppageproblems    StoppageProblem[]

  // @@index([equipmentId])
  @@index([departmentId])
  @@index([code])
  @@map("stoppage")
}

model StoppageProblem {
  id            String   @id @unique @default(uuid()) @db.VarChar(36)
  code          Int      @unique @default(autoincrement())
  stoppageId    String   @map("stoppage_maintenance_id") @db.VarChar(36)
  problemId     String   @map("problem_id") @db.VarChar(36)
  problemHours  String?  @map("problem_hours") @db.VarChar(5)
  noOfStoppages Int?     @map("no_of_stoppages")
  remarks       String?  @map("remarks") @db.Text
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @default(now()) @updatedAt @map("updated_at")
  createdById   String?  @map("created_by_id") @db.VarChar(36)
  updatedById   String?  @map("updated_by_id") @db.VarChar(36)
  isActive      Boolean  @default(true) @map("is_active")
  ProblemFk     Problem  @relation(fields: [problemId], references: [id])
  stoppageFk    Stoppage @relation(fields: [stoppageId], references: [id])

  @@index([stoppageId])
  @@index([problemId])
  @@map("stoppage_problem")
}

model Adjustment {
  id              String           @id @unique @default(uuid()) @db.VarChar(36)
  code            Int              @unique @default(autoincrement())
  toSourceId      String?          @map("to_source_id") @db.VarChar(36)
  quantity        Decimal          @map("quantity") @db.Decimal(10, 2)
  remarks         String?          @map("remarks") @db.Text
  transactionDate DateTime         @map("transaction_date") @db.Date
  materialId      String?          @map("material_id") @db.VarChar(36)
  transactionType transaction_type @map("type")
  createdAt       DateTime         @default(now()) @map("created_at")
  updatedAt       DateTime         @default(now()) @updatedAt @map("updated_at")
  createdById     String?          @map("created_by_id") @db.VarChar(36)
  updatedById     String?          @map("updated_by_id") @db.VarChar(36)
  isActive        Boolean          @default(true) @map("is_active")

  @@index([materialId])
  @@map("adjustment")
}

model Equipment {
  id                   String         @id @unique @default(uuid()) @db.VarChar(36)
  code                 Int            @unique @default(autoincrement())
  equipmentId          String         @map("equipment_id") @db.VarChar(36)
  equipmentDescription String         @map("equipment_description") @db.VarChar(36)
  strength             String         @map("strength") @db.VarChar(36)
  quality              String         @map("quality") @db.VarChar(36)
  power                String         @map("power") @db.VarChar(36)
  powerGroup           String         @map("power_group") @db.VarChar(36)
  storage              String         @map("storage") @db.VarChar(36)
  orderOfAppearance    String         @map("order_of_appearance") @db.VarChar(36)
  status               Status         @default(active)
  createdAt            DateTime       @default(now()) @map("created_at")
  updatedAt            DateTime       @default(now()) @updatedAt @map("updated_at")
  createdById          String?        @map("created_by_id") @db.VarChar(36)
  updatedById          String?        @map("updated_by_id") @db.VarChar(36)
  isActive             Boolean        @default(true) @map("is_active")
  analysis             String?        @map("analysis") @db.VarChar(36)
  subEquipments        SubEquipment[]

  @@index([code])
  @@index([equipmentId])
  @@map("equipment")
}

model SubEquipment {
  id                      String    @id @unique @default(uuid()) @db.VarChar(36)
  code                    Int       @unique @default(autoincrement())
  subEquipmentNo          String    @map("sub_equipment_id") @db.VarChar(36)
  subEquipmentDescription String    @map("sub_equipment_description") @db.VarChar(36)
  equipmentSubGroupId     String    @map("equipment_sub_group_id") @db.VarChar(36)
  eq_id                   String    @map("eq_id") @db.VarChar(36)
  status                  Status    @default(active)
  createdAt               DateTime  @default(now()) @map("created_at")
  updatedAt               DateTime  @default(now()) @updatedAt @map("updated_at")
  createdById             String?   @map("created_by_id") @db.VarChar(36)
  updatedById             String?   @map("updated_by_id") @db.VarChar(36)
  isActive                Boolean   @default(true) @map("is_active")
  equipment               Equipment @relation(fields: [eq_id], references: [id])

  @@index([code])
  @@index([equipmentSubGroupId])
  @@index([eq_id])
  @@map("sub_equipment")
}

model PowerTransaction {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  transactionDate DateTime @map("transaction_date") @db.Date
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")
  powerDetails    Power[]

  @@index([code])
  @@map("power_transaction")
}

model Power {
  id            String           @id @unique @default(uuid()) @db.VarChar(36)
  code          Int              @unique @default(autoincrement())
  transactionId String           @map("transaction_id") @db.VarChar(36)
  equipmentId   String           @map("equipment_id") @db.VarChar(36)
  units         Decimal          @map("units") @db.Decimal(7, 2)
  createdAt     DateTime         @default(now()) @map("created_at")
  updatedAt     DateTime         @default(now()) @updatedAt @map("updated_at")
  createdById   String?          @map("created_by_id") @db.VarChar(36)
  updatedById   String?          @map("updated_by_id") @db.VarChar(36)
  isActive      Boolean          @default(true) @map("is_active")
  transaction   PowerTransaction @relation(fields: [transactionId], references: [id])

  @@index([transactionId])
  @@index([equipmentId])
  @@index([code])
  @@map("power")
}

model QualityLab {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  transactionDate DateTime @map("transaction_date") @db.Date
  equipmentId     String   @map("equipment_id") @db.VarChar(36)
  materialId      String   @map("material_id") @db.VarChar(36)
  ist             String   @map("initial_setting_time") @db.VarChar(36)
  fst             String   @map("final_setting_time") @db.VarChar(36)
  blaine          String   @map("blaine") @db.VarChar(36)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")

  @@index([equipmentId])
  @@index([materialId])
  @@index([code])
  @@map("lab_quality")
}

model AnalysisLab {
  id               String             @id @unique @default(uuid()) @db.VarChar(36)
  code             Int                @unique @default(autoincrement())
  transactionDate  DateTime           @map("transaction_date") @db.Date
  materialId       String             @map("material_id") @db.VarChar(36)
  // analysisId       String   @map("analysis_id") @db.VarChar(36)
  createdAt        DateTime           @default(now()) @map("created_at")
  updatedAt        DateTime           @default(now()) @updatedAt @map("updated_at")
  createdById      String?            @map("created_by_id") @db.VarChar(36)
  updatedById      String?            @map("updated_by_id") @db.VarChar(36)
  isActive         Boolean            @default(true) @map("is_active")
  // MaterialAnalysis Analysis @relation(fields: [analysisId], references: [id])
  // analyses         LabAnalysisTypes[] @relation("LabToTypes")
  LabAnalysisTypes LabAnalysisTypes[]

  @@index([materialId])
  @@index([code])
  // @@index([analysisId])
  // @@index([materialId,analysisId])
  @@map("lab_analysis")
}

model LabAnalysisTypes {
  //? Primary Key
  id   String @id @unique @default(uuid()) @db.VarChar(36)
  //? Readable reference Key
  code Int    @unique @default(autoincrement())

  //? Columns
  AnalysisLabId    String      @map("analysis_lab_id") @db.VarChar(36)
  analysisId       String      @map("analysis_id") @db.VarChar(36)
  MaterialAnalysis Analysis    @relation(fields: [analysisId], references: [id])
  //? Default columns
  createdAt        DateTime    @default(now()) @map("created_at")
  updatedAt        DateTime    @default(now()) @updatedAt @map("updated_at")
  createdById      String?     @map("created_by_id") @db.VarChar(36)
  updatedById      String?     @map("updated_by_id") @db.VarChar(36)
  isActive         Boolean     @default(true) @map("is_active")
  lab              AnalysisLab @relation(fields: [AnalysisLabId], references: [id])

  //? Indexing
  // @@index([])
  @@index([code])
  @@index([analysisId])
  //? Table name in DB
  @@map("lab_analysis_types")
}

enum transaction_type {
  Receipts
  Despatch
  consume
}

enum Status {
  active
  inActive
}

model externalLabTestingReport {
  id                   String   @id @unique @default(uuid()) @db.VarChar(36)
  code                 Int      @unique @default(autoincrement())
  transactionDate      DateTime @map("transaction_date") @db.Date
  despatchDate         DateTime @map("despatch_date") @db.Date
  reportReceivedDate   DateTime @map("report_received_date") @db.Date
  testingType          String   @map("testing_type") @db.VarChar(36)
  materialId           String   @map("material_id") @db.VarChar(36)
  thirdPartyVendorName String   @map("third_party_vendor_name") @db.VarChar(36)
  remarks              String   @map("remarks") @db.Text
  labUploadFile        String?  @map("lab_file_name") @db.Text
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @default(now()) @updatedAt @map("updated_at")
  createdById          String?  @map("created_by_id") @db.VarChar(36)
  updatedById          String?  @map("updated_by_id") @db.VarChar(36)
  isActive             Boolean  @default(true) @map("is_active")

  //? Indexing
  // @@index([])
  @@index([code])
  //? Table name in DB
  @@map("external_lab_testing_report")
}

model Despatch {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  transactionDate DateTime @map("transaction_date") @db.Date
  materialId      String   @map("material_id") @db.VarChar(36)
  railQuantity    Decimal  @map("quantity") @db.Decimal(10, 2)
  roadQuantity    Decimal  @map("road_quantity") @db.Decimal(10, 2)
  exportQuantity  Decimal  @map("export_quantity") @db.Decimal(10, 2)
  inlandQuantity  Decimal  @map("inland_quantity") @db.Decimal(10, 2)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)

  @@index([code])
  @@index([materialId])
  @@map("despatch")
}

model ReceiptConsumption {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  transactionDate DateTime @map("transaction_date") @db.Date
  materialType    String   @map("material_type") @db.VarChar(36)
  materialId      String   @map("material_id") @db.VarChar(36)
  transactionType String   @map("transaction_type") @db.VarChar(36)
  quantity        Decimal  @map("quantity") @db.Decimal(10, 2)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)

  @@index([materialType])
  @@index([materialId])
  @@map("receipt_consumption")
}

model Production {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  transactionDate DateTime @map("transaction_date") @db.Date
  equipmentId     String   @map("material_type") @db.VarChar(36)
  materialId      String   @map("material_id") @db.VarChar(36)
  runningHours    String?  @map("running_hours") @db.VarChar(5)
  quantity        Decimal  @map("quantity") @db.Decimal(10, 2)
  fuelConsumption Decimal  @map("fuelConsumption") @db.Decimal(10, 2)
  remarks         String?  @map("remarks") @db.Text
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)

  @@index([equipmentId])
  @@index([materialId])
  @@map("production")
}

model budget {
  id              String   @id @unique @default(uuid()) @db.VarChar(36)
  code            Int      @unique @default(autoincrement())
  financialYear   String   @map("financial_year") @db.VarChar(36)
  transactionDate DateTime @map("transaction_date") @db.Date
  materialId      String   @map("material_id") @db.VarChar(36)
  budgetCode      String?  @map("budget_code") @db.VarChar(36)
  budgetValue     Decimal  @map("budget_value") @db.Decimal(10, 2)
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @default(now()) @updatedAt @map("updated_at")
  createdById     String?  @map("created_by_id") @db.VarChar(36)
  updatedById     String?  @map("updated_by_id") @db.VarChar(36)
  isActive        Boolean  @default(true) @map("is_active")

  // ? Indexing
  // @@index([])
  @@index([code])
  // ? Table name in DB
  @@map("budget")
}

model MaterialMappingMaster {
  id               String   @id @unique @default(uuid()) @db.VarChar(36)
  code             Int      @unique @default(autoincrement())
  materialMasterId String   @map("material_id") @db.VarChar(36)
  sourceId         String   @map("source_id") @db.VarChar(36)
  createdById      String?  @map("created_by_id") @db.VarChar(36)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedById      String?  @map("updated_by_id") @db.VarChar(36)
  updatedAt        DateTime @default(now()) @updatedAt @map("updated_at")
  status           Status   @default(active)
  isActive         Boolean  @default(true) @map("is_active")

  material Material @relation(fields: [materialMasterId], references: [id])

  @@map("material_mapping_master")
}

model Material {
  id   String @id @unique @default(uuid()) @db.VarChar(36)
  code Int    @unique @default(autoincrement())

  materialTypeId      String   @map("material_type") @db.VarChar(36)
  materialDescription String   @map("material_description") @db.VarChar(200)
  strength            YesNo
  analysis            YesNo
  quality             YesNo
  glCode              String   @map("gl_code") @db.VarChar(50)
  orderOfAppearance   String   @map("order_of_appearance")
  isActive            Boolean  @default(true) @map("is_active")
  status              Status   @default(active)
  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @default(now()) @updatedAt @map("updated_at")
  createdById         String?  @map("created_by_id") @db.VarChar(36)
  updatedById         String?  @map("updated_by_id") @db.VarChar(36)

  materialMappings MaterialMappingMaster[]

  //? Indexing
  @@index([code])
  //? Table name in DB
  @@map("material")
}

enum YesNo {
  Yes
  No
}
